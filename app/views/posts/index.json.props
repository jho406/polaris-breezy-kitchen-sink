if flash.any?
  json.toast do
    json.error flash.key?(:error)
    json.content flash[:notice]
  end
end

json.layout(partial: 'layout') {}

json.title 'Account'

json.callout(defer: :auto, partial: ['callout', fragment: true]) do
end

all_posts = Post.order(updated_at: :desc)
pending = Post.where(pending: true)

json.posts do
  opts = {
    partial: ['posts/posts_list',
      locals: {
        posts: all_posts,
        param_name: :page_num_for_all,
        sleep_for_demo: false
      }
    ]
  }

  json.all(opts) {}

  if request.format.html?
    # The pending tab will initially be fake
    json.pending(partial: 'fake_posts_list') {}
  else
    # Then a manual this.props.remote for the real thing
    opts = {
      partial: ['posts/posts_list',
        locals: {
          posts: pending,
          param_name: :page_num_for_pending,
          sleep_for_demo: false
        }
      ]
    }

    json.pending(opts) {}
  end
end

# create preloaded pages only on direct visit
# clear this on componentDidMount
# if request.format.html?
#  last_updated_post = all_posts.first

#  json.preloaded_pages [
#    [edit_post_path(last_updated_post), @renderer.render(:edit, assigns: {post: last_updated_post})],
#  ]
#end

