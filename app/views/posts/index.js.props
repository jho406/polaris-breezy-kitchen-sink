if flash.any?
  json.toast do
    json.error flash.key?(:error)
    json.content flash[:notice]
  end
end

json.layout nil, partial: 'layout'

json.title 'Account'

json.callout(defer: :auto) do
  sleep 5
  json.body "Finished! Time: #{Time.now.to_i}"
end

posts = @posts
json.posts do
  page_num = params[:page]
  items_per_page = 10

  paged_posts = posts
    .page(page_num)
    .per(items_per_page)
    .order(created_at: :desc)


  json.resource_name({
    singular: 'post',
    plural: 'posts'
  })

  json.items do
    json.array! paged_posts do |post|
      json.id post.id
      json.title 'Mae Jemison'
      json.location 'Decantur, USA'
      json.body post.body
      json.created_at post.created_at
      json.updated_at post.updated_at
      json.edit_post_path edit_post_path(post)
      json.post_path post_path(post)
    end
  end

  needs_pagination = posts.count > items_per_page

  if needs_pagination
    json.pagination do
      json.has_previous !paged_posts.first_page?
      json.has_next !paged_posts.last_page?
      json.path_to_next_page path_to_next_page(paged_posts)
      json.path_to_prev_page path_to_prev_page(paged_posts)
    end
  end
end
